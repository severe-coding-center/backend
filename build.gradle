plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.Guard'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	google()
}

dependencies {
	// Web + JPA + Security
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Kakao OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// WebClient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// PostConstruct 오류 해결용
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//Goolge
	implementation 'com.google.firebase:firebase-admin:10.0.2'


	// (선택) JWT 충돌 방지용
	constraints {
		implementation('io.jsonwebtoken:jjwt-api:0.11.5') {
			because 'Spring Boot 3+ 와의 호환성 보장'
		}
	}
}


tasks.named('test') {
	useJUnitPlatform()
}
